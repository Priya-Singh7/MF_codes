--create table priya.mf_modified_monthly as
with raw_data1 as 
(
select *,date_trunc('month',CAST(dt as date)) as Mt from priya.spark_users_all where Mt<= date_add('day', -1, current_date) and Mt >= date_trunc('month', date_add('day', -1, current_date))),

MF_events as 
(select *,date_trunc('month',CAST(dt as date)) as Mt from  priya.MF_events_master where event_id in ('308.0.0.1.0','301.0.0.1.0','305.0.0.1.0','310.0.0.1.5')and Mt<= date_add('day', -1, current_date) and Mt >= date_trunc('month', date_add('day', -1, current_date))),

Mf_table as
(select * from  MF_events  where event_id in ('308.0.0.1.0')),
join_mf_spark as 
(select a.mt,a.spark_users,a.platform,b.client_id as MF_users,b.mt as Mf_date from raw_data1 a left join Mf_table b
on a.spark_users=b.client_id
and a.mt=b.mt),

fund_details_impressions as 
(
select * from  MF_events where event_id in ('301.0.0.1.0')),

views_funds_screen_join as
(select a.*,b.client_id from join_mf_spark a 
left join fund_details_impressions b on a.MF_users=b.client_id),

order_pad_impressions as 
(select * from  MF_events where event_id in ('310.0.0.1.5')),

order_pad_impressions_join as
(select a.*,b.client_id as oderpad_clients from views_funds_screen_join  a 
left join order_pad_impressions b on a.client_id=b.client_id),

sn_clientkyc_data as 
(
select * from db_online_engine_rev.sn_clientkyc where activefrom::date >='2022-12-01'),


mf_spark_b2b_b2c as
(select a.*,b.b2c from join_mf_spark a left join 
sn_clientkyc_data b on a.spark_users =b.party_code),

mf_fund_view_b2b_b2c as 
(select a.*,b.b2c from views_funds_screen_join a left join 
sn_clientkyc_data b on a.client_id =b.party_code),

mf_order_view_b2b_b2c as 
(select a.*,b.b2c from order_pad_impressions_join  a left join 
sn_clientkyc_data b on a.oderpad_clients =b.party_code),



client_invested as 
(SELECT distinct client_code as client_id,id as orders,dt as Sip_date, cast(updated_ts as date) updated_date, date_trunc('month',CAST(created_ts as date)) as Mt,platform, status, payment_status,first_order, sip_type, '2.0' version FROM dbo_wms_s3.sips where id>0 and (exchange_sip_id <> '' and exchange_sip_id is not null and status not in ('SIP_REJECTED','SIP_FAILED')) and Mt >= date_trunc('month', date_add('day', -1, current_date))),



raw_data2 as 
(
select a.*,b.activefrom,b.b2c from client_invested a
left join db_online_engine_rev.sn_clientkyc b 
on a.client_id =b.party_code),
raw_data3 as 
(
select *,case when datediff(day,cast(activefrom as date), current_date) <=30 then 'New Users' else 'Old Users' end new_old_users from raw_data2),
lump_sum as 
(
 select *,date_trunc('month',CAST(created_ts as date)) as Mt from dbo_wms_s3.orders where
    investment_type='LUMPSUM' and exchange_order_id is not null and exchange_order_id<>'' and status <> 'ORDER_REJECTED'
    and id >0 and Mt<= date_add('day', -1, current_date) and Mt >= date_trunc('month', date_add('day', -1, current_date))),

lump_sum_b2b_b2c as 
(select a.*,b.b2c from lump_sum a left join sn_clientkyc_data b 
on a.client_code =b.party_code)
  
select
 mt,
  'Step1' as steps,
  'Spark_Users' as step_name,
  b2c,
  platform as platform_month,
  count(distinct spark_users)
  from mf_spark_b2b_b2c
group by 1,2,3,4,5
union all
select
 mt,
  'Step2' as steps,
  'MF_users' as step_name,
  b2c,
  platform as platform_month,
  count(distinct MF_users)
   from mf_spark_b2b_b2c
  group by 1,2,3,4,5
union all
  select
mt,
  'Step3' as steps,
  'MF_users_invested' as step_name,
  b2c,
  platform as platform_month,
  count(distinct client_id)
   from raw_data3
  group by 1,2,3,4,5
  union all
  select
 mt,
  'Step3.1' as steps,
  'MF_users_old' as step_name,
  b2c,
  platform as platform_month,
  count(distinct client_id)
   from raw_data3
   where new_old_users ='Old Users'
  group by 1,2,3,4,5
  union all
  select
  mt,
  'Step3.2' as steps,
  'MF_users_New' as step_name,
   b2c,
   platform as platform_month,
  count(distinct client_id)
   from raw_data3
   where new_old_users ='New Users'
  group by 1,2,3,4,5
  union all
  select
  mt,
  'Step4' as steps,
  'Orders_Placed' as step_name,
   b2c,
   platform as platform_month,
  count(distinct orders)
   from raw_data3
   group by 1,2,3,4,5
union all 
select
   mt,
  'Step4.1' as steps,
  'Orders_Placed_paid' as step_name,
  b2c,
  platform as platform_month,
  count(distinct orders)
   from raw_data3
where first_order = 'TRUE'
and payment_status = 'SUCCESS'
group by 1,2,3,4,5
union all
select
  mt,
  'Step5' as steps,
  'Lump_sump' as step_name,
   b2c,
   order_source as platform_month,
  count(distinct id)
   from lump_sum_b2b_b2c
   group by 1,2,3,4,5
